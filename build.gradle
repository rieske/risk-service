buildscript {
    ext {
        springBootVersion = '1.2.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'findbugs'
apply plugin: 'pmd'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

sourceSets {
    componentTest {
        java.srcDir file('src/component-test/java')
        resources.srcDir file('src/component-test/resources')
    }
}

task componentTest(type: Test) {
    testClassesDir = sourceSets.componentTest.output.classesDir
    classpath = sourceSets.componentTest.runtimeClasspath
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
 }

componentTest.dependsOn test
check.dependsOn componentTest
jar.dependsOn check

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "com.google.guava:guava:18.0"
    
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.jayway.restassured:rest-assured:2.3.4"
    testCompile "junit:junit:4.+"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.skyscreamer:jsonassert:1.2.3"
        
    componentTestCompile sourceSets.main.output
    componentTestCompile configurations.testCompile
    componentTestCompile sourceSets.test.output
    componentTestRuntime configurations.testRuntime
}

run {
    classpath = sourceSets.componentTest.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
